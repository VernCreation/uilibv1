-- Modern Roblox UI Library (LocalScript)
-- Sleek, smooth, and modern UI components
-- Place this in StarterPlayerScripts or StarterGui as a LocalScript

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local UILibrary = {}
UILibrary.__index = UILibrary

-- Configuration
local Config = {
    Colors = {
        Primary = Color3.fromRGB(45, 45, 55),
        Secondary = Color3.fromRGB(35, 35, 45),
        Accent = Color3.fromRGB(100, 150, 255),
        Text = Color3.fromRGB(220, 220, 220),
        TextSecondary = Color3.fromRGB(160, 160, 160),
        Success = Color3.fromRGB(100, 255, 150),
        Warning = Color3.fromRGB(255, 200, 100),
        Error = Color3.fromRGB(255, 100, 100),
        Border = Color3.fromRGB(60, 60, 70),
        Hover = Color3.fromRGB(55, 55, 65)
    },
    Fonts = {
        Primary = Enum.Font.Gotham,
        Secondary = Enum.Font.GothamMedium
    },
    Animation = {
        Speed = 0.3,
        Style = Enum.EasingStyle.Quart,
        Direction = Enum.EasingDirection.Out
    }
}

-- Utility Functions
local function CreateTween(object, properties, duration)
    duration = duration or Config.Animation.Speed
    local tweenInfo = TweenInfo.new(
        duration,
        Config.Animation.Style,
        Config.Animation.Direction
    )
    return TweenService:Create(object, tweenInfo, properties)
end

local function AddCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function AddStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness or 1
    stroke.Color = color or Config.Colors.Border
    stroke.Parent = parent
    return stroke
end

local function AddPadding(parent, padding)
    local uiPadding = Instance.new("UIPadding")
    uiPadding.PaddingTop = UDim.new(0, padding)
    uiPadding.PaddingBottom = UDim.new(0, padding)
    uiPadding.PaddingLeft = UDim.new(0, padding)
    uiPadding.PaddingRight = UDim.new(0, padding)
    uiPadding.Parent = parent
    return uiPadding
end

-- Main Library Constructor
function UILibrary.new(title, parent)
    local self = setmetatable({}, UILibrary)
    
    -- Create main container
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "UILibrary"
    self.ScreenGui.Parent = parent or playerGui
    self.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main frame
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Name = "MainFrame"
    self.MainFrame.Size = UDim2.new(0, 500, 0, 600)
    self.MainFrame.Position = UDim2.new(0.5, -250, 0.5, -300)
    self.MainFrame.BackgroundColor3 = Config.Colors.Primary
    self.MainFrame.BorderSizePixel = 0
    self.MainFrame.Parent = self.ScreenGui
    
    AddCorner(self.MainFrame, 12)
    AddStroke(self.MainFrame, 1, Config.Colors.Border)
    
    -- Title bar
    self.TitleBar = Instance.new("Frame")
    self.TitleBar.Name = "TitleBar"
    self.TitleBar.Size = UDim2.new(1, 0, 0, 50)
    self.TitleBar.BackgroundColor3 = Config.Colors.Secondary
    self.TitleBar.BorderSizePixel = 0
    self.TitleBar.Parent = self.MainFrame
    
    AddCorner(self.TitleBar, 12)
    
    -- Title label
    self.TitleLabel = Instance.new("TextLabel")
    self.TitleLabel.Name = "TitleLabel"
    self.TitleLabel.Size = UDim2.new(1, -20, 1, 0)
    self.TitleLabel.Position = UDim2.new(0, 20, 0, 0)
    self.TitleLabel.BackgroundTransparency = 1
    self.TitleLabel.Text = title or "UI Library"
    self.TitleLabel.TextColor3 = Config.Colors.Text
    self.TitleLabel.TextSize = 18
    self.TitleLabel.Font = Config.Fonts.Secondary
    self.TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    self.TitleLabel.Parent = self.TitleBar
    
    -- Content container
    self.ContentFrame = Instance.new("ScrollingFrame")
    self.ContentFrame.Name = "ContentFrame"
    self.ContentFrame.Size = UDim2.new(1, 0, 1, -60)
    self.ContentFrame.Position = UDim2.new(0, 0, 0, 60)
    self.ContentFrame.BackgroundTransparency = 1
    self.ContentFrame.BorderSizePixel = 0
    self.ContentFrame.ScrollBarThickness = 6
    self.ContentFrame.ScrollBarImageColor3 = Config.Colors.Accent
    self.ContentFrame.Parent = self.MainFrame
    
    AddPadding(self.ContentFrame, 15)
    
    -- Layout
    self.Layout = Instance.new("UIListLayout")
    self.Layout.SortOrder = Enum.SortOrder.LayoutOrder
    self.Layout.Padding = UDim.new(0, 10)
    self.Layout.Parent = self.ContentFrame
    
    -- Make draggable
    self:MakeDraggable()
    
    -- Initialize tabs
    self.Tabs = {}
    self.CurrentTab = nil
    
    return self
end

-- Make window draggable
function UILibrary:MakeDraggable()
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    self.TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = self.MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            self.MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Create Tab
function UILibrary:CreateTab(name)
    local tab = {}
    
    -- Tab button (if this is not the first tab, we'll add tab switching later)
    if not self.CurrentTab then
        self.CurrentTab = tab
    end
    
    -- Tab content
    tab.Frame = Instance.new("Frame")
    tab.Frame.Name = name .. "Tab"
    tab.Frame.Size = UDim2.new(1, 0, 1, 0)
    tab.Frame.BackgroundTransparency = 1
    tab.Frame.Visible = (self.CurrentTab == tab)
    tab.Frame.Parent = self.ContentFrame
    
    tab.Layout = Instance.new("UIListLayout")
    tab.Layout.SortOrder = Enum.SortOrder.LayoutOrder
    tab.Layout.Padding = UDim.new(0, 8)
    tab.Layout.Parent = tab.Frame
    
    self.Tabs[name] = tab
    return tab
end

-- Create Section
function UILibrary:CreateSection(tab, title)
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Size = UDim2.new(1, 0, 0, 40)
    section.BackgroundColor3 = Config.Colors.Secondary
    section.BorderSizePixel = 0
    section.Parent = tab.Frame
    
    AddCorner(section, 8)
    AddStroke(section, 1, Config.Colors.Border)
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 1, 0)
    titleLabel.Position = UDim2.new(0, 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Config.Colors.Text
    titleLabel.TextSize = 16
    titleLabel.Font = Config.Fonts.Secondary
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = section
    
    return section
end

-- Create Divider
function UILibrary:CreateDivider(tab)
    local divider = Instance.new("Frame")
    divider.Name = "Divider"
    divider.Size = UDim2.new(1, 0, 0, 1)
    divider.BackgroundColor3 = Config.Colors.Border
    divider.BorderSizePixel = 0
    divider.Parent = tab.Frame
    
    return divider
end

-- Create Button
function UILibrary:CreateButton(tab, text, callback)
    local button = Instance.new("TextButton")
    button.Name = text .. "Button"
    button.Size = UDim2.new(1, 0, 0, 35)
    button.BackgroundColor3 = Config.Colors.Secondary
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Config.Colors.Text
    button.TextSize = 14
    button.Font = Config.Fonts.Primary
    button.Parent = tab.Frame
    
    AddCorner(button, 6)
    AddStroke(button, 1, Config.Colors.Border)
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        CreateTween(button, {BackgroundColor3 = Config.Colors.Hover}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        CreateTween(button, {BackgroundColor3 = Config.Colors.Secondary}):Play()
    end)
    
    -- Click effect
    button.MouseButton1Down:Connect(function()
        CreateTween(button, {BackgroundColor3 = Config.Colors.Accent}, 0.1):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        CreateTween(button, {BackgroundColor3 = Config.Colors.Hover}, 0.1):Play()
    end)
    
    button.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)
    
    return button
end

-- Create Toggle
function UILibrary:CreateToggle(tab, text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = text .. "Toggle"
    toggleFrame.Size = UDim2.new(1, 0, 0, 35)
    toggleFrame.BackgroundColor3 = Config.Colors.Secondary
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = tab.Frame
    
    AddCorner(toggleFrame, 6)
    AddStroke(toggleFrame, 1, Config.Colors.Border)
    AddPadding(toggleFrame, 10)
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Config.Colors.Text
    label.TextSize = 14
    label.Font = Config.Fonts.Primary
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 20)
    toggleButton.Position = UDim2.new(1, -50, 0.5, -10)
    toggleButton.BackgroundColor3 = default and Config.Colors.Accent or Config.Colors.Border
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame
    
    AddCorner(toggleButton, 10)
    
    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Size = UDim2.new(0, 16, 0, 16)
    toggleIndicator.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    toggleIndicator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggleIndicator.BorderSizePixel = 0
    toggleIndicator.Parent = toggleButton
    
    AddCorner(toggleIndicator, 8)
    
    local toggled = default or false
    
    toggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        
        local buttonColor = toggled and Config.Colors.Accent or Config.Colors.Border
        local indicatorPos = toggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        
        CreateTween(toggleButton, {BackgroundColor3 = buttonColor}):Play()
        CreateTween(toggleIndicator, {Position = indicatorPos}):Play()
        
        if callback then callback(toggled) end
    end)
    
    return toggleFrame
end

-- Create TextInput
function UILibrary:CreateTextInput(tab, placeholder, callback)
    local textInput = Instance.new("TextBox")
    textInput.Name = placeholder .. "Input"
    textInput.Size = UDim2.new(1, 0, 0, 35)
    textInput.BackgroundColor3 = Config.Colors.Secondary
    textInput.BorderSizePixel = 0
    textInput.PlaceholderText = placeholder
    textInput.PlaceholderColor3 = Config.Colors.TextSecondary
    textInput.Text = ""
    textInput.TextColor3 = Config.Colors.Text
    textInput.TextSize = 14
    textInput.Font = Config.Fonts.Primary
    textInput.TextXAlignment = Enum.TextXAlignment.Left
    textInput.Parent = tab.Frame
    
    AddCorner(textInput, 6)
    AddStroke(textInput, 1, Config.Colors.Border)
    AddPadding(textInput, 10)
    
    -- Focus effects
    textInput.Focused:Connect(function()
        CreateTween(textInput, {BackgroundColor3 = Config.Colors.Hover}):Play()
    end)
    
    textInput.FocusLost:Connect(function()
        CreateTween(textInput, {BackgroundColor3 = Config.Colors.Secondary}):Play()
        if callback then callback(textInput.Text) end
    end)
    
    return textInput
end

-- Create Label
function UILibrary:CreateLabel(tab, text)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 25)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Config.Colors.TextSecondary
    label.TextSize = 13
    label.Font = Config.Fonts.Primary
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = tab.Frame
    
    return label
end

-- Create Dropdown
function UILibrary:CreateDropdown(tab, title, options, callback)
    local dropdown = Instance.new("Frame")
    dropdown.Name = title .. "Dropdown"
    dropdown.Size = UDim2.new(1, 0, 0, 35)
    dropdown.BackgroundColor3 = Config.Colors.Secondary
    dropdown.BorderSizePixel = 0
    dropdown.Parent = tab.Frame
    
    AddCorner(dropdown, 6)
    AddStroke(dropdown, 1, Config.Colors.Border)
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = title .. ": " .. (options[1] or "None")
    button.TextColor3 = Config.Colors.Text
    button.TextSize = 14
    button.Font = Config.Fonts.Primary
    button.TextXAlignment = Enum.TextXAlignment.Left
    button.Parent = dropdown
    
    AddPadding(button, 10)
    
    local arrow = Instance.new("TextLabel")
    arrow.Size = UDim2.new(0, 20, 1, 0)
    arrow.Position = UDim2.new(1, -30, 0, 0)
    arrow.BackgroundTransparency = 1
    arrow.Text = "▼"
    arrow.TextColor3 = Config.Colors.TextSecondary
    arrow.TextSize = 12
    arrow.Font = Config.Fonts.Primary
    arrow.Parent = dropdown
    
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Name = "Options"
    optionsFrame.Size = UDim2.new(1, 0, 0, #options * 30)
    optionsFrame.Position = UDim2.new(0, 0, 1, 5)
    optionsFrame.BackgroundColor3 = Config.Colors.Secondary
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Visible = false
    optionsFrame.ZIndex = 10
    optionsFrame.Parent = dropdown
    
    AddCorner(optionsFrame, 6)
    AddStroke(optionsFrame, 1, Config.Colors.Border)
    
    local optionsLayout = Instance.new("UIListLayout")
    optionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    optionsLayout.Parent = optionsFrame
    
    local currentSelection = options[1] or "None"
    local isOpen = false
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0, 0)
        optionButton.BorderSizePixel = 0
        optionButton.Text = option
        optionButton.TextColor3 = Config.Colors.Text
        optionButton.TextSize = 14
        optionButton.Font = Config.Fonts.Primary
        optionButton.TextXAlignment = Enum.TextXAlignment.Left
        optionButton.Parent = optionsFrame
        
        AddPadding(optionButton, 10)
        
        optionButton.MouseEnter:Connect(function()
            CreateTween(optionButton, {BackgroundColor3 = Config.Colors.Hover}):Play()
        end)
        
        optionButton.MouseLeave:Connect(function()
            CreateTween(optionButton, {BackgroundColor3 = Color3.fromRGB(0, 0, 0, 0)}):Play()
        end)
        
        optionButton.MouseButton1Click:Connect(function()
            currentSelection = option
            button.Text = title .. ": " .. option
            optionsFrame.Visible = false
            isOpen = false
            arrow.Text = "▼"
            
            if callback then callback(option) end
        end)
    end
    
    button.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        optionsFrame.Visible = isOpen
        arrow.Text = isOpen and "▲" or "▼"
        
        if isOpen then
            dropdown.Size = UDim2.new(1, 0, 0, 35 + #options * 30 + 5)
        else
            dropdown.Size = UDim2.new(1, 0, 0, 35)
        end
    end)
    
    return dropdown
end

-- Update content size
function UILibrary:UpdateContentSize()
    local contentSize = self.Layout.AbsoluteContentSize
    self.ContentFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 20)
end

-- Connect layout changes
RunService.Heartbeat:Connect(function()
    for _, library in pairs(getgenv().UILibraries or {}) do
        if library.UpdateContentSize then
            library:UpdateContentSize()
        end
    end
end)

-- Example Usage
local function CreateExample()
    -- Initialize library
    local ui = UILibrary.new("Modern UI Library")
    
    -- Create main tab
    local mainTab = ui:CreateTab("Main")
    
    -- Add sections and components
    ui:CreateSection(mainTab, "Buttons & Actions")
    
    ui:CreateButton(mainTab, "Sample Button", function()
        print("Button clicked!")
    end)
    
    ui:CreateToggle(mainTab, "Enable Feature", false, function(state)
        print("Toggle:", state)
    end)
    
    ui:CreateDivider(mainTab)
    
    ui:CreateSection(mainTab, "Input & Selection")
    
    ui:CreateTextInput(mainTab, "Enter text here...", function(text)
        print("Input:", text)
    end)
    
    ui:CreateDropdown(mainTab, "Select Option", {"Option 1", "Option 2", "Option 3"}, function(selected)
        print("Selected:", selected)
    end)
    
    ui:CreateLabel(mainTab, "This is a sample label with information")
    
    ui:CreateDivider(mainTab)
    
    ui:CreateSection(mainTab, "More Controls")
    
    ui:CreateToggle(mainTab, "Advanced Mode", true, function(state)
        print("Advanced mode:", state)
    end)
    
    ui:CreateButton(mainTab, "Execute Action", function()
        print("Action executed!")
    end)
    
    -- Store reference for cleanup
    getgenv().UILibraries = getgenv().UILibraries or {}
    table.insert(getgenv().UILibraries, ui)
    
    return ui
end

-- Auto-execute example (remove this section if you want to use the library manually)
local ui = CreateExample()

-- Clean up function
local function cleanup()
    if ui and ui.ScreenGui then
        ui.ScreenGui:Destroy()
    end
end

-- Clean up when player leaves
player.AncestryChanged:Connect(function()
    if not player.Parent then
        cleanup()
    end
end)
